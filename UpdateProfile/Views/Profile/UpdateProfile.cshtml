@model UpdateProfile.Models.UserProfileResponse

@{
    ViewBag.Title = "Update Profile";
}
<style>
    .text-danger {
        font-weight: bold;
        color: rgba(255, 21, 21, 0.91);
        padding: 0px 14px;
        margin-top: -1px;
        position: absolute;
    }
</style>
<script src="//cdnjs.cloudflare.com/ajax/libs/moment.js/2.9.0/moment-with-locales.min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/3.1.3/js/bootstrap-datetimepicker.min.js"></script>
<link href="http://112.196.3.42:8195/css/bootstrap-datetimepicker.min.css" rel="stylesheet" />

<div class="panel panel-primary" style="margin:20px;">
    <div class="panel-heading">
        <h3 class="panel-title">Edit Profile</h3>
        <table class="model-state">
            @foreach (var item in ViewContext.ViewData.ModelState)
            {
                if (item.Value.Errors.Any())
                {
                    <tr>
                        <td><b>@item.Key</b></td>
                        <td>@((item.Value == null || item.Value.Value == null) ? "<null>" : item.Value.Value.RawValue)</td>
                        <td>@(string.Join("; ", item.Value.Errors.Select(x => x.ErrorMessage)))</td>
                    </tr>
                }
            }
        </table>
    </div>
    <div class="panel-body">

        @using (Html.BeginForm("UpdateProfile", "Profile", FormMethod.Post))
        {
            if (Model != null)
            {
               
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.userId, new { @class = "form-control input-sm" })
                @Html.HiddenFor(model => model.id, new { @class = "form-control input-sm" })
                @Html.HiddenFor(model => model.pictureId, new { @class = "form-control input-sm" })
                @Html.HiddenFor(model => model.viewCounter, new { @class = "form-control input-sm" })
                @Html.HiddenFor(model => model.privatePolls, new { @class = "form-control input-sm" })
                @Html.HiddenFor(model => model.businessPolls, new { @class = "form-control input-sm" })
                @Html.HiddenFor(model => model.publicPolls, new { @class = "form-control input-sm" })
                @Html.HiddenFor(model => model.totalPolls, new { @class = "form-control input-sm" })
                @Html.HiddenFor(model => model.pictureUrl, new { @class = "form-control input-sm" })

                foreach (var kvp in Model.profilePictures)
                {
                    @Html.HiddenFor(m => m.profilePictures[kvp.Key]);
                    @Html.HiddenFor(m => m.profilePictures[kvp.Key]);
                }
                <div class="col-md-12 inputGroupContainer">
                    <div class="col-md-12 col-sm-12">
                        <div class="form-group col-md-6 col-sm-6">
                            <b>
                                @Html.DisplayFor(model => model.firstName, new { @class = "form-control input-sm" })
                                @Html.DisplayFor(model => model.lastName, new { @class = "form-control input-sm" })
                                <br />
                                @Html.DisplayFor(model => model.jobTitle, new { @class = "form-control input-sm" })
                                <br />
                                @Html.Display("Ph:")@Html.DisplayFor(model => model.phoneNumber, new { @class = "form-control input-sm" })
                            </b>
                        </div>
                        <div class="form-group col-md-6 col-sm-6">
                            <img src="@Model.pictureUrl" alt="">
                        </div>



                        <div class="form-group col-md-6 col-sm-6">
                            @Html.LabelFor(model => model.firstName)
                            @Html.TextBoxFor(model => model.firstName, new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(model => model.firstName, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-6 col-sm-6">
                            @Html.LabelFor(model => model.lastName)
                            @Html.TextBoxFor(model => model.lastName, new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(model => model.lastName, "", new { @class = "text-danger" })

                        </div>
                        @*<div class="form-group col-md-6 col-sm-6">
                                @Html.LabelFor(model => model.userName)
                                @Html.TextBoxFor(model => model.userName, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(model => model.userName, "", new { @class = "text-danger" })
                            </div>*@

                        @*<div class="form-group col-md-6 col-sm-6">
                                @Html.LabelFor(model => model.emailAddress)
                                @Html.TextBoxFor(model => model.emailAddress, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(model => model.emailAddress, "", new { @class = "text-danger" })
                            </div>*@

                        @*<div class="form-group col-md-6 col-sm-6">
                                @Html.LabelFor(model => model.password)
                                @Html.PasswordFor(model => model.password, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                            </div>*@


                        <div class="form-group col-md-6 col-sm-6">
                            @Html.LabelFor(model => model.payPalEmail)
                            @Html.TextBoxFor(model => model.payPalEmail, new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(model => model.payPalEmail, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-6 col-sm-6">
                            @Html.LabelFor(model => model.phoneNumber, htmlAttributes: new { @class = "" })
                            @Html.TextBoxFor(model => model.phoneNumber, new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(model => model.phoneNumber, "", new { @class = "text-danger" })
                        </div>
                        @*<div class="form-group col-md-6 col-sm-6">
                                @Html.LabelFor(model => model.org, htmlAttributes: new { @class = "" })
                                @Html.TextBoxFor(model => model.org, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(model => model.org, "", new { @class = "text-danger" })
                            </div>*@
                        <div class="form-group col-md-6 col-sm-6">

                            @Html.LabelFor(model => model.companyName, htmlAttributes: new { @class = "" })
                            @Html.TextBoxFor(model => model.companyName, new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(model => model.companyName, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-6 col-sm-6">
                            @Html.LabelFor(model => model.jobTitle, htmlAttributes: new { @class = "" })
                            @Html.TextBoxFor(model => model.jobTitle, new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(model => model.jobTitle, "", new { @class = "text-danger" })
                        </div>


                        <div class="form-group col-md-6 col-sm-6">
                            @Html.LabelFor(model => model.educationLevel, htmlAttributes: new { @class = "" })
                            @Html.TextBoxFor(model => model.educationLevel, new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(model => model.educationLevel, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-md-6 col-sm-6">
                            @Html.LabelFor(model => model.relationshipStatus, htmlAttributes: new { @class = "" })
                            @Html.TextBoxFor(model => model.relationshipStatus, new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(model => model.relationshipStatus, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-md-6 col-sm-6">
                            @Html.LabelFor(model => model.maritalStatus, htmlAttributes: new { @class = "" })
                            @Html.TextBoxFor(model => model.maritalStatus, new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(model => model.maritalStatus, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-md-6 col-sm-6">
                            @Html.LabelFor(model => model.phoneType, htmlAttributes: new { @class = "" })
                            @Html.EnumDropDownListFor(model => model.phoneType, new { @class = "form-control input-sm" })
                            @*@Html.ValidationMessageFor(model => model.phoneType, "", new { @class = "text-danger" })*@
                        </div>



                        <div class="form-group col-md-6 col-sm-6">
                            @Html.LabelFor(model => model.gender, htmlAttributes: new { @class = "" })
                            <div class="radio-inline">
                                @Html.RadioButtonFor(model => model.gender, "Male")
                                @Html.Label("Male")
                            </div>
                            <div class="radio-inline">
                                @Html.RadioButtonFor(model => model.gender, "Female")
                                @Html.Label("Female")
                            </div>
                            @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-6 col-sm-6">
                            @Html.LabelFor(model => model.countryCode, htmlAttributes: new { @class = "" })
                            @Html.TextBoxFor(model => model.countryCode, new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(model => model.countryCode, "", new { @class = "text-danger" })
                        </div>




                        <div class="form-group col-md-6 col-sm-6">
                            @Html.LabelFor(model => model.addressLine1, htmlAttributes: new { @class = "" })
                            @Html.TextBoxFor(model => model.addressLine1, new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(model => model.addressLine1, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-md-6 col-sm-6">
                            @Html.LabelFor(model => model.addressLine2, htmlAttributes: new { @class = "" })
                            @Html.TextBoxFor(model => model.addressLine2, new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(model => model.addressLine2, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-md-6 col-sm-6">
                            @Html.LabelFor(model => model.addressCity, htmlAttributes: new { @class = "" })
                            @Html.TextBoxFor(model => model.addressCity, new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(model => model.addressCity, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-md-6 col-sm-6">
                            @Html.LabelFor(model => model.addressCountry, htmlAttributes: new { @class = "" })
                            @Html.TextBoxFor(model => model.addressCountry, new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(model => model.addressCountry, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-md-6 col-sm-6">
                            @Html.LabelFor(model => model.addressState, htmlAttributes: new { @class = "" })
                            @Html.TextBoxFor(model => model.addressState, new { @class = "form-control  input-sm" })
                            @Html.ValidationMessageFor(model => model.addressState, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-md-6 col-sm-6">
                            @Html.LabelFor(model => model.addressZip, htmlAttributes: new { @class = "" })
                            @Html.TextBoxFor(model => model.addressZip, new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(model => model.addressZip, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-12 col-sm-6">
                            @Html.LabelFor(model => model.birthDate, htmlAttributes: new { @class = "" })
                            <div class='input-group date' id='datetimepicker1'>
                                @Html.TextBoxFor(model => model.birthDate, new { @class = "form-control input-sm " })
                                <span class="input-group-addon" style="width:83px">
                                    <span class="glyphicon glyphicon-calendar"></span>
                                </span>
                                @Html.ValidationMessageFor(model => model.birthDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                  
                        <div class="form-group col-md-6 col-sm-6">
                            <div class="checkbox">
                                @Html.CheckBoxFor(model => model.isPublicProfile)
                                @Html.LabelFor(model => model.isPublicProfile, htmlAttributes: new { @class = "" })
                                @Html.ValidationMessageFor(model => model.isPublicProfile, "", new { @class = "text-danger" })
                            </div>
                            <div class="checkbox">
                                @Html.CheckBoxFor(model => model.isPhonePublic)
                                @Html.LabelFor(model => model.isPhonePublic, htmlAttributes: new { @class = "" })
                                @Html.ValidationMessageFor(model => model.isPhonePublic, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @*<div class="form-group col-md-6 col-sm-6">

                                <div class="checkbox">
                                    @Html.CheckBoxFor(model => model.isPhonePublic)
                                    @Html.LabelFor(model => model.isPhonePublic, htmlAttributes: new { @class = "" })
                                    @Html.ValidationMessageFor(model => model.isPhonePublic, "", new { @class = "text-danger" })
                                </div>
                            </div>*@

                        <div class="form-group col-md-6 col-sm-6">
                            <div class="checkbox">
                                @Html.CheckBoxFor(model => model.isEmailPublic)

                                @Html.LabelFor(model => model.isEmailPublic, htmlAttributes: new { @class = "" })
                                @Html.ValidationMessageFor(model => model.isEmailPublic, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-md-6 col-sm-6">
                            <div class="col-md-6">
                                <input type="submit" value="Update Profile" class="btn btn-lg btn-info" />
                            </div>
                        </div>
                    </div>



                </div>
            }
            else
            {
                <h2>Sorry profile does not exist!</h2>
            }

        }
    </div>
    <script>
        $(function () {
            $('#datetimepicker1').datetimepicker();
        });
    </script>


