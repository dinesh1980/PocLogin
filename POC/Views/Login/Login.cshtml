@model POC.Models.LoginRequestResponseViewModel

@{
    ViewBag.Title = "Login";
}

<h2>Login</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Login</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.LoginRequest.userName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LoginRequest.userName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LoginRequest.userName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LoginRequest.password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.LoginRequest.password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LoginRequest.password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
    if (Model != null)
    {
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.LoginResponse.userId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LoginResponse.token)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LoginResponse.displayName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LoginResponse.isEmailVerified)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LoginResponse.isPhoneVerified)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LoginResponse.isCallVerified)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LoginResponse.secretAccessKey)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LoginResponse.userName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LoginResponse.deviceId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LoginResponse.isPartner)
                </th>
                <th></th>
            </tr>

            <tr>
                <td>
                    @Html.DisplayFor(model => model.LoginResponse.userId)
                </td>
                <td>
                    @Html.DisplayFor(model => model.LoginResponse.token)
                </td>
                <td>
                    @Html.DisplayFor(model => model.LoginResponse.displayName)
                </td>
                <td>
                    @Html.CheckBoxFor(model => model.LoginResponse.isEmailVerified)
                </td>
                <td>
                    @Html.DisplayFor(model => model.LoginResponse.isPhoneVerified)
                </td>
                <td>
                    @Html.CheckBoxFor(model => model.LoginResponse.isCallVerified)
                </td>
                <td>
                    @Html.DisplayFor(model => model.LoginResponse.secretAccessKey)
                </td>
                <td>
                    @Html.DisplayFor(model => model.LoginResponse.userName)
                </td>
                <td>
                    @Html.DisplayFor(model => model.LoginResponse.deviceId)
                </td>
                <td>
                    @Html.DisplayFor(model => model.LoginResponse.isPartner)
                </td>
            </tr>
        </table>
    }

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
